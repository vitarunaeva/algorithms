/**
 МОНИТОРИНГ
 Алла получила задание, связанное с мониторингом работы различных серверов.
 Требуется понять, сколько времени обрабатываются определённые запросы на конкретных серверах.
 Эту информацию нужно хранить в матрице, где номер столбца соответствуют идентификатору запроса, а номер строки — идентификатору сервера.
 Алла перепутала строки и столбцы местами. С каждым бывает. Помогите ей исправить баг.

 Есть матрица размера m × n. Нужно написать функцию, которая её транспонирует.

 Транспонированная матрица получается из исходной заменой строк на столбцы.
 Формат ввода
 В первой строке задано число n — количество строк матрицы.
 Во второй строке задано m — число столбцов, m и n не превосходят 1000. В следующих n строках задана матрица. Числа в ней не превосходят по модулю 1000.

 Формат вывода
 Напечатайте транспонированную матрицу в том же формате, который задан во входных данных.
 Каждая строка матрицы выводится на отдельной строке, элементы разделяются пробелами.

 Example:
 Ввод:
 4
 3
 1 2 3
 0 2 6
 7 4 1
 2 7 0

 Вывод:
 1 0 7 2
 2 2 4 7
 3 6 1 0
 */

const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    prompt: ''
});

const result = [];

rl.prompt();

rl.on('line', (line) => {
    result.push(line);
})

rl.on('close', () => {
    console.log(transpose(result));
})

function transpose(elements) {
    const rowLength = +elements[0];
    const columnLength = +elements[1];
    const matrix = elements.slice(2).map(el => el.split(' '));
    let newMatrix = [];

    for (let i = 0; i < columnLength; i++) {
        newMatrix[i] = [];
        for (let j = 0; j < rowLength; j++) {
            newMatrix[i][j] = matrix[j][i];
        }
    }

    return newMatrix.map(row => row.join(' ')).join('\n');
}

