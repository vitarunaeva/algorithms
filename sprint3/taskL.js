/**
 ДВА ВЕЛОСИПЕДА

 Вася решил накопить денег на два одинаковых велосипеда — себе и сестре. У Васи есть копилка, в которую каждый день он может добавлять деньги (если, конечно, у него есть такая финансовая возможность). В процессе накопления Вася не вынимает деньги из копилки.

 У вас есть информация о росте Васиных накоплений — сколько у Васи в копилке было денег в каждый из дней.

 Ваша задача — по заданной стоимости велосипеда определить

 первый день, в которой Вася смог бы купить один велосипед,
 и первый день, в который Вася смог бы купить два велосипеда.
 Подсказка: решение должно работать за O(log n).

 Формат ввода
 В первой строке дано число дней n, по которым велись наблюдения за Васиными накоплениями. 1 ≤ n ≤ 106.

 В следующей строке записаны n целых неотрицательных чисел. Числа идут в порядке неубывания. Каждое из чисел не превосходит 106.

 В третьей строке записано целое положительное число s — стоимость велосипеда. Это число не превосходит 106.

 Формат вывода
 Нужно вывести два числа — номера дней по условию задачи.

 Если необходимой суммы в копилке не нашлось, нужно вернуть -1 вместо номера дня.

 Example:
 Ввод:
 6
 1 2 4 4 6 8
 3

 Вывод:
 3 5
 */

const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    prompt: ''
});

const result = [];

rl.prompt();

rl.on('line', (line) => {
    result.push(line);
})

rl.on('close', () => {
    processData(result);
})

function processData(elements) {
    const items = elements[1].split(' ');
    const price = elements[2];

    console.log(priceSearch(items, price), priceSearch(items, price * 2));

}

function priceSearch(arr, val, low = -1, mid = 0, high = arr.length) {

    if (high - low > 1) {
        mid = (high + low) >> 1;
        if (+arr[mid] < val) {
            low = mid;
        } else {
            high = mid;
        }
        return priceSearch(arr, val, low, mid, high);
    }

    if (+arr[high] >= val) {
        return high + 1;
    }
    return -1;
}

